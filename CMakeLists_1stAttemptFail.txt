cmake_minimum_required(VERSION 2.8.7)

if (NOT Slicer_SOURCE_DIR)
  set(EXTENSION_NAME PkModeling)
  set(EXTENSION_HOMEPAGE "https://github.com/millerjv/PkModeling/wiki/PkModeling")
  set(EXTENSION_CATEGORY "Quantification")
  set(EXTENSION_CONTRIBUTORS "Yingxuan Zhu (GE), Jim Miller (GE), Andriy Fedorov (BWH), Ming-ching Chang (GE), Mahnaz Maddah (SRI)")
  set(EXTENSION_DESCRIPTION "PkModeling is a Slicer4 Extension that provides pharmacokinetic modeling for dynamic contrast enhanced MRI (DCE MRI).")
  set(EXTENSION_ICONURL "http://wiki.slicer.org/slicerWiki/images/3/34/PkModeling.png")
  set(EXTENSION_STATUS "Beta")
  set(EXTENSION_SCREENSHOTURLS " ")
  set(EXTENSION_ACKNOWLEDGEMENTS "This work is part of the National Alliance for Medical Image Computing (NAMIC), funded by the National Institutes of Health through the NIH Roadmap for Medical Research, Grant U54 EB005149. Information on the National Centers for Biomedical Computing can be obtained from http://nihroadmap.nih.gov/bioinformatics . This work was also funded in part by the Quantitative Imaging Network (QIN) Grant U01CA151261.")
endif()


set(PkModeling_CMAKE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/CMake")


#-----------------------------------------------------------------------------
# Superbuild
#
set(CMAKE_MODULE_PATH "${PkModeling_CMAKE_DIR}" ${CMAKE_MODULE_PATH})
set(EXTERNAL_PROJECT_DIR ${CMAKE_CURRENT_SOURCE_DIR}/CMakeExternals)
set(EXTERNAL_PROJECT_FILE_PREFIX "")
include(ExternalProject)
include(ExternalProjectDependency)



#-----------------------------------------------------------------------------
# Standalone vs Slicer extension option
#
option(PkModeling_BUILD_SLICER_EXTENSION "Build as a Slicer Extension" OFF)
set(superbuild_default ON)
if(Slicer_SOURCE_DIR)
  # Default values used when PkModeling is integrated into Slicer as Remote project.
  set(superbuild_default OFF)
endif()
option(PkModeling_SUPERBUILD "Build ${PROJECT_NAME} and the projects it depends on." ${superbuild_default})
mark_as_advanced(PkModeling_SUPERBUILD)



#-----------------------------------------------------------------------------
# Output directories.
#
foreach(type LIBRARY RUNTIME ARCHIVE)
  # Make sure the directory exists
  if(DEFINED PkModeling_CMAKE_${type}_OUTPUT_DIRECTORY
     AND NOT EXISTS ${PkModeling_CMAKE_${type}_OUTPUT_DIRECTORY})
    message(FATAL_ERROR "PkModeling_CMAKE_${type}_OUTPUT_DIRECTORY is set to a non-existing directory [${PkModeling_CMAKE_${type}_OUTPUT_DIRECTORY}]")
  endif()

  if(PkModeling_SUPERBUILD)
    set(output_dir ${PkModeling_BINARY_DIR}/bin)
    if(NOT DEFINED PkModeling_CMAKE_${type}_OUTPUT_DIRECTORY)
      set(PkModeling_CMAKE_${type}_OUTPUT_DIRECTORY ${PkModeling_BINARY_DIR}/${PROJECT_NAME_LC}-build/bin)
    endif()
    mark_as_superbuild(PkModeling_CMAKE_${type}_OUTPUT_DIRECTORY:PATH)
  else()
    if(NOT DEFINED PkModeling_CMAKE_${type}_OUTPUT_DIRECTORY)
      set(output_dir ${PkModeling_BINARY_DIR}/bin)
    else()
      set(output_dir ${PkModeling_CMAKE_${type}_OUTPUT_DIRECTORY})
    endif()
  endif()
  set(CMAKE_${type}_OUTPUT_DIRECTORY ${output_dir} CACHE INTERNAL "Single output directory for building all libraries.")
endforeach()



#-----------------------------------------------------------------------------
# Superbuild script
#

if(PkModeling_SUPERBUILD)
  include("${CMAKE_CURRENT_SOURCE_DIR}/SuperBuild.cmake")
  return()
endif()





#-----------------------------------------------------------------------------
# Dependencies
#

# Slicer
if(PkModeling_BUILD_SLICER_EXTENSION AND NOT Slicer_SOURCE_DIR)
  find_package(Slicer REQUIRED)
  include(${Slicer_USE_FILE})
  include(${Slicer_EXTENSION_CPACK})
endif()

find_package(ITK NO_MODULE REQUIRED)
include(${ITK_USE_FILE})


#-----------------------------------------------------------------------------
add_subdirectory(PkSolver)
add_subdirectory(CLI)











































